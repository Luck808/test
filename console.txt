一.输出信息
console.log用于输出普通信息
console.info用于输出提示信息
console.error用于输出错误信息
console.warn用于输出警告信息
console.debug用于输出调试信息
二.printf占位符
只支持字符（%s）
整数（%d或%i）
浮点（%f）
对象（%o）
console.log("%d年%d月%d日"，2000，0，0)；
console.log（"圆周率%f"，3.1415926）；
console.log("%o",dog);查看对象内部情况
console.dirxml用来显示网页的某个节点所包含的html/xml代码
console.group（）输出一组信息的开头
console.groupEnd（）结束一组输出信息
console.assert()对输入的表达式进行断言，只有表达式为false时，才输出相应的信息到控制台
console.count()统计代码被执行次数
console.dir(dog)直接将该dom结点以dom树的结构输出，可以详细查对象的方法发展等等
console.time（）计时开始
console.timeEnd（）计时结束
console.timeLine()配合一起记录一段时间轴
console.timeLineEnd()
console.profile()配合一起使用来查看CPU使用相关信息在profiles面板里面查看就可以看到cpu相关使用信息
console.profileEnd()
console.trace堆栈跟踪相关的调试上述方法只是我个人理解罢了。如果想查看具体Api

elements:主要用来查看前面界面的html的dom结构，和修改css的样式。css可以即使修改，即使显示。大大方便了开发者调试页面，这真是十分
友好的
console:这个除了查看错误信息，打印调试信息，写一些测试脚本以外，还可以当作Javascriptapi查看用，例如我想查看console都有哪些方法和
属性，我可以直接在console中输入“console”并执行
source：只要用来调试js和查看源代码